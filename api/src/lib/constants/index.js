const SEARCH_PARAMS = {
  SCORE_WALKING_WEIGHT: 1.5,
  VEHICULE_WALKING_WEIGHT: 1,
  SEARCH_WINDOW_MINUTES: 60,
  WALKING_SPEED_AVERAGE: 4000
}

/**
 * Delay for driver to get current service after departure service time.
 */
const DELAY_START_SERVICE = 60

const BUSSTOP_DISTANCE_DETECT = 1000

const ROLES = {
  ADMIN: "Admin",
  ADMIN_SAFRAN: "Safran-Admin",
  USER: "User",
  USER_SAFRAN: "Safran-User",
  USER_EXT: "Ext-User",
  DRIVER: "Driver",
  DRIVER_REGULAR_LINE: "Regular line driver",
  DRIVER_TAD: "TAD driver",
}

const SERVICES = {
  TAD: "TAD",
  FIXE: "Fixe",

  // /!\ Not a transport service. Used for rewards.
  INCENTIVE: "Incentive"
}

const TRANSPORT = {
  VEHICULE: "Vehicule",
  WALKING: "Walking",
  BICYCLE: "Bicycle",
}

const BOOKING_STATUS = {
  AWAITING: "AWAITING",
  VALIDATED: "VALIDATED",
  CANCELLED: "CANCELLED",
  DONE: "DONE",
  CANCELED_BY_USER: "CANCELED_BY_USER",
  ERROR: "ERROR",
}

const RIDE_STATUS = {
  CREATED: "CREATED",
  RIDING: "RIDING",
  DONE: "DONE"
}

const USER_RIDE_STATUS = {
  EXPECTED: "EXPECTED",
  UNEXPECTED: "UNEXPECTED",
  OK: "OK",
}

const MANDRILL_TEMPLATES = {
  EMAIL_VALIDATION: "safir-prod-validate-email",
  BOOKING_DONE: "safir-prod-booking-done",
  GENERIC: "safir-kevin-generic-template"
}

const NOTIF_TYPE = {
  EMAIL: "EMAIL",
  PUSH: "PUSH",
  SMS: "SMS",
  SMS_OR_PUSH: ""
}

/**
 * Time in minutes to notif ride will arrive
 */
const RIDE_NOTIF_TIME = {
  NOTIF_RIDE_COMING_SOON: 40,
  NOTIF_RIDE_ARRIVING: 15,
}

// Refresh Padam booking status every X seconds.
const PADAM_BOOKING_REFRESH_FREQUENCY = 300

const EVENTS = {

  // Events used by Cloud Tasks. Can also used as an internal event.
  CANCEL_BOOKING: "/bookings/task-cancel-booking",
  CREATE_BOOKING: "/bookings/task-create-booking",
  ERROR_ON_BOOKING: "ERROR_ON_BOOKING", 
  PADAM_CHECK_BOOKING: "/bookings/task-padam-check-booking",
  PADAM_CHECK_BOOKING_SUCCESS: "PADAM_CHECK_BOOKING_SUCCESS",

  NOTIF_RIDE_COMING_SOON: "/rides/notif-ride-coming-soon",
  NOTIF_RIDE_ARRIVING: "/rides/notif-ride-arriving",
  UPDATE_INCENTIVE_POINTS: "/users/task-update-incentive-points",

  EXT_CANCEL_BOOKING_SUCCESS: "EXT_CANCEL_BOOKING_SUCCESS",
  EXT_CANCEL_BOOKING_FAIL: "EXT_CANCEL_BOOKING_FAIL",
  BOOKINGS_DONE: "BOOKINGS_DONE",

  CREATE_BICYCLE_BOOKING: "CREATE_BICYCLE_BOOKING",
  // GET_OR_CREATE_RIDE: "/rides/get-or-create",
 
  // Internal events
  EXT_CREATE_BOOKING_FAIL: "EXT_CREATE_BOOKING_FAIL",
  EXT_CREATE_BOOKING_SUCCESS: "EXT_CREATE_BOOKING_SUCCESS",
  EXT_USER_CREATED: "EXT_USER_CREATED",
  EXT_USER_CREATION_FAILED: "EXT_USER_CREATION_FAILED",
  SEARCH_DIRECTION: "SEARCH_DIRECTION",
  USER_AUTHENTICATED: "USER_AUTHENTICATED",
  USER_CREATED: "USER_CREATED",
  USER_DELETED: "USER_DELETED",
  USER_EMAIL_VALIDATED: "USER_EMAIL_VALIDATED",
  USER_UPDATED: "USER_UPDATED",

  DRIVER_MOVE: "DRIVER_MOVE",
  USER_SCANNED: "USER_SCANNED",
  USER_ADDED_TO_BUSSTOP_AFTER_SCAN: "USER_ADDED_TO_BUSSTOP_AFTER_SCAN",
  DRIVER_ARRIVES_TO_BUSSTOP: "DRIVER_ARRIVES_TO_BUSSTOP",
  DRIVER_EXISTS_TO_BUSSTOP: "DRIVER_EXISTS_TO_BUSSTOP",
  DRIVER_GET_LAST_SCANNED_USERS: "DRIVER_GET_LAST_SCANNED_USERS",
  CALL_DRIVER_GET_LAST_SCANNED_USERS: "CALL_DRIVER_GET_LAST_SCANNED_USERS",
  CALL_SCAN_USERS: "CALL_SCAN_USERS",

  DRIVER_GET_MY_SERVICE: "DRIVER_GET_MY_SERVICE",

  REINIT_PASSWORD: "REINIT_PASSWORD",
  SEND_SMS_CODE: "SEND_SMS_CODE",
}

const POINTS = {
  COLLECTIVE_TRANSPORT: 5,
  SCANNED: 5,
  BEFORE_13H: 5,
}

const BICYCLES_PER_VEHICLE = 3

const CONF = {
  CARALLIANCE_EMAIL: "CARALLIANCE_EMAIL",
  NUMBER_OF_BIKES: "NUMBER_OF_BIKES",
  KEOLIS_EMAIL: "KEOLIS_EMAIL",
  // BICYCLES_PER_VEHICLE: "BICYCLES_PER_VEHICLE"
}

module.exports = {
  ROLES,
  SERVICES,
  EVENTS,
  BOOKING_STATUS,
  RIDE_STATUS,
  TRANSPORT,
  USER_RIDE_STATUS,
  SEARCH_PARAMS,
  MANDRILL_TEMPLATES,
  NOTIF_TYPE,
  BUSSTOP_DISTANCE_DETECT,
  DELAY_START_SERVICE,
  POINTS,
  RIDE_NOTIF_TIME,
  PADAM_BOOKING_REFRESH_FREQUENCY,
  BICYCLES_PER_VEHICLE,
  CONF
}
